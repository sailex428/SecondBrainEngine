name: build-and-publish
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        java: [
          21,
        ]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Setup JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'microsoft'

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew build

      - name: Capture build artifacts
        if: ${{ matrix.java == '21' }}
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: versions/**/build/libs/

  release:
    needs: build
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: artifacts

      - name: Get version from gradle.properties
        id: get_version
        run: |
          VERSION=$(grep "mod_version" gradle.properties | cut -d'=' -f2)
          echo "MOD_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create Git tag
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git tag -a "v${{ env.MOD_VERSION }}" -m "Release v${{ env.MOD_VERSION }}"
          git push origin "v${{ env.MOD_VERSION }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.MOD_VERSION }}"
          name: "SecondBrainEngine v${{ env.MOD_VERSION }}"
          files: |
            artifacts/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}