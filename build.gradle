/*
 * This file is part of Baritone.
 *
 * Baritone is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Baritone is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with Baritone.  If not, see <https://www.gnu.org/licenses/>.
 */


import net.fabricmc.loom.task.RemapJarTask

plugins {
    id 'fabric-loom' version "1.9-SNAPSHOT"
}

group project.maven_group
version project.mod_version

sourceSets {
    testmod {
        compileClasspath += main.compileClasspath + main.output
        runtimeClasspath += main.runtimeClasspath + main.output
    }
}

repositories {
    mavenCentral()
    maven {
        name = "Ladysnake Mods"
        url = 'https://maven.ladysnake.org/releases'
    }
    maven { url = "https://jitpack.io" }
}

dependencies {
    minecraft "com.mojang:minecraft:${mc_version}"
    mappings "net.fabricmc:yarn:${mc_version}+build.${yarn_build}:v2"
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fapi_version}+${mc_version}"

    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    modImplementation("org.ladysnake.cardinal-components-api:cardinal-components-base:${cca_version}") {
        transitive = false
    }
    modImplementation("org.ladysnake.cardinal-components-api:cardinal-components-entity:${cca_version}") {
        transitive = false
    }
    modImplementation("org.ladysnake.cardinal-components-api:cardinal-components-world:${cca_version}") {
        transitive = false
    }
    modImplementation("com.github.gnembon:fabric-carpet:${carpet_version}")
    compileOnly "com.demonwav.mcdev:annotations:1.0"

    implementation 'com.fasterxml.jackson.core:jackson-core:2.16.0'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.16.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.0'
}

tasks.register('testmodJar', Jar) {
    dependsOn testmodClasses
    archiveBaseName.set('Otomaton')
    archiveClassifier.set('dev')
    filesMatching('fabric.mod.json') {
        expand 'version': project.version
    }
}

tasks.register('remapTestmodJar', RemapJarTask) {
    dependsOn project.testmodJar
    archiveBaseName.set('Otomaton')
    inputFile.set(testmodJar.archiveFile)
    addNestedDependencies.set(false)
}

processResources {
    inputs.property "version", project.mod_version
    filesMatching("fabric.mod.json") {
        expand "version": project.mod_version
    }
}

compileJava {
    options.encoding = "UTF-8" // allow emoji in comments :^)
}


java {
    withSourcesJar()
}

jar {
    preserveFileTimestamps = false
    reproducibleFileOrder = true

    manifest {
        attributes(
            'MixinConfigs': 'mixins.automatone.json',

            'Implementation-Title': 'SecondBrainEngine',
            'Implementation-Version': project.version
        )
    }
}

